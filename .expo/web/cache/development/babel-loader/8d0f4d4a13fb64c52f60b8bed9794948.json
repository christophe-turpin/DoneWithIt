{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nvar API_URL = 'http://localhost:3001/api/auth/';\n\nvar storeData = function storeData(key, value) {\n  return _regeneratorRuntime.async(function storeData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, value));\n\n        case 3:\n          _context.next = 7;\n          break;\n\n        case 5:\n          _context.prev = 5;\n          _context.t0 = _context[\"catch\"](0);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n};\n\nvar getData = function getData(key) {\n  var value;\n  return _regeneratorRuntime.async(function getData$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n        case 3:\n          value = _context2.sent;\n\n          if (value !== null) {\n            console.log(value);\n          }\n\n          _context2.next = 9;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar removeData = function removeData(key) {\n  return _regeneratorRuntime.async(function removeData$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.removeItem(key));\n\n        case 3:\n          return _context3.abrupt(\"return\", true);\n\n        case 6:\n          _context3.prev = 6;\n          _context3.t0 = _context3[\"catch\"](0);\n          return _context3.abrupt(\"return\", false);\n\n        case 9:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\n\nvar register = function register(pseudo, email, password) {\n  return axios.post(API_URL + \"signup\", {\n    pseudo: pseudo,\n    email: email,\n    password: password\n  });\n};\n\nvar login = function login(email, password) {\n  return axios.post(API_URL + \"signin\", {\n    email: email,\n    password: password\n  }).then(function (response) {\n    if (response.data.accessToken) {\n      storeData('user', JSON.stringify(response.data));\n    }\n\n    return response.data;\n  });\n};\n\nvar logout = function logout(props) {\n  removeData('user');\n};\n\nvar getCurrentUser = function getCurrentUser() {\n  return getData('user');\n};\n\nexport default {\n  register: register,\n  login: login,\n  logout: logout,\n  getCurrentUser: getCurrentUser\n};","map":{"version":3,"sources":["/home/christophe/workspace/ReactNative/DoneWithIt/services/auth.service.js"],"names":["axios","AsyncStorage","API_URL","storeData","key","value","setItem","getData","getItem","console","log","removeData","removeItem","register","pseudo","email","password","post","login","then","response","data","accessToken","JSON","stringify","logout","props","getCurrentUser"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;SACSC,Y;AAET,IAAMC,OAAO,GAAG,iCAAhB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAOC,GAAP,EAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEJJ,YAAY,CAACK,OAAb,CAAqBF,GAArB,EAA0BC,KAA1B,CAFI;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;;AAQA,IAAME,OAAO,GAAG,SAAVA,OAAU,CAAOH,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEYH,YAAY,CAACO,OAAb,CAAqBJ,GAArB,CAFZ;;AAAA;AAEFC,UAAAA,KAFE;;AAGR,cAAIA,KAAK,KAAK,IAAd,EAAoB;AAEhBI,YAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACH;;AANO;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;;AAYA,IAAMM,UAAU,GAAG,SAAbA,UAAa,CAAOP,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAELH,YAAY,CAACW,UAAb,CAAwBR,GAAxB,CAFK;;AAAA;AAAA,4CAGJ,IAHI;;AAAA;AAAA;AAAA;AAAA,4CAMJ,KANI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;;AAUA,IAAMS,QAAQ,GAAG,SAAXA,QAAW,CAACC,MAAD,EAASC,KAAT,EAAgBC,QAAhB,EAA6B;AAC1C,SAAOhB,KAAK,CAACiB,IAAN,CAAcf,OAAd,aAA+B;AAClCY,IAAAA,MAAM,EAANA,MADkC;AAElCC,IAAAA,KAAK,EAALA,KAFkC;AAGlCC,IAAAA,QAAQ,EAARA;AAHkC,GAA/B,CAAP;AAKH,CAND;;AAQA,IAAME,KAAK,GAAG,SAARA,KAAQ,CAACH,KAAD,EAAQC,QAAR,EAAqB;AAC/B,SAAOhB,KAAK,CAACiB,IAAN,CAAcf,OAAd,aAA+B;AAClCa,IAAAA,KAAK,EAALA,KADkC;AAElCC,IAAAA,QAAQ,EAARA;AAFkC,GAA/B,EAING,IAJM,CAID,UAACC,QAAD,EAAc;AAChB,QAAIA,QAAQ,CAACC,IAAT,CAAcC,WAAlB,EAA+B;AAC3BnB,MAAAA,SAAS,CAAC,MAAD,EAASoB,IAAI,CAACC,SAAL,CAAeJ,QAAQ,CAACC,IAAxB,CAAT,CAAT;AACH;;AACD,WAAOD,QAAQ,CAACC,IAAhB;AACH,GATM,CAAP;AAUH,CAXD;;AAaA,IAAMI,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AACtBf,EAAAA,UAAU,CAAC,MAAD,CAAV;AACH,CAFD;;AAIA,IAAMgB,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,SAAOpB,OAAO,CAAC,MAAD,CAAd;AACH,CAFD;;AAIA,eAAe;AACdM,EAAAA,QAAQ,EAARA,QADc;AAEdK,EAAAA,KAAK,EAALA,KAFc;AAGdO,EAAAA,MAAM,EAANA,MAHc;AAIdE,EAAAA,cAAc,EAAdA;AAJc,CAAf","sourcesContent":["import axios from 'axios';\nimport { AsyncStorage } from 'react-native';\n\nconst API_URL = 'http://localhost:3001/api/auth/'\n\nconst storeData = async (key, value) => {\n    try {\n        await AsyncStorage.setItem(key, value);\n    } catch (error) {\n        // Error saving data\n    }\n}\n\nconst getData = async (key) => {\n    try {\n        const value = await AsyncStorage.getItem(key);\n        if (value !== null) {\n            // Our data is fetched successfully\n            console.log(value);\n        }\n    } catch (error) {\n        // Error retrieving data\n    }\n}\n\nconst removeData = async (key) =>{\n    try {\n        await AsyncStorage.removeItem(key);\n        return true;\n    }\n    catch(exception) {\n        return false;\n    }\n}\n\nconst register = (pseudo, email, password) => {\n    return axios.post(`${API_URL}signup`, {\n        pseudo,\n        email,\n        password\n    })\n};\n\nconst login = (email, password) => {\n    return axios.post(`${API_URL}signin`, {\n        email,\n        password\n    })\n    .then((response) => {\n        if (response.data.accessToken) {\n            storeData('user', JSON.stringify(response.data))\n        }\n        return response.data\n    })\n};\n\nconst logout = (props) => {\n    removeData('user')\n};\n\nconst getCurrentUser = () => {\n    return getData('user')\n};\n\nexport default {\n\tregister,\n\tlogin,\n\tlogout,\n\tgetCurrentUser\n};"]},"metadata":{},"sourceType":"module"}